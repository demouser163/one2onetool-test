pipeline {
    agent {
        docker {
            image 'node:6-alpine'
            args '-p 3000:3000'
        }
    }
    environment {
        CI = 'true' 
    }
    stages {
        stage('Build') {
            steps {
                sh 'npm install'
            }
        }
        stage('Test') { 
            steps {
                sh './jenkins/scripts/test.sh' 
            }
        }
    }
}



pipeline {
    agent any 
   environment {
        DATA_FILE = "$WORKSPACE/data/Questions.json"
        CI = 'true'
        }

    stages {
        stage('Checkout') {
            steps {
                
                echo "Git Checkout"
                checkout([$class: 'GitSCM', branches: [[name: '*/release']], extensions: [], userRemoteConfigs: [[credentialsId: 'github-credential', url: 'https://github.com/demouser163/one2onetool-test.git']]])
                sh 'ls ${DATA_FILE}'
            }
         }
        stage('npm-build') {
          agent {
            docker {
            image 'node:7.4'
           }
         }
         steps {
             echo "Branch is ${env.BRANCH_NAME}..."
             withNPM(npmrcConfig:'my-custom-npmrc') {
             echo "Performing npm build..."
             sh 'npm install'
         }
       }
   }
 }
}


echo $WORKSPACE

cd $WORKSPACE

echo "Build docker file"

docker build -f Dockerfile -t ramdoc15/mydocker-registory:latest .

docker image push ramdoc15/mydocker-registory:latest


FROM node:10-alpine

RUN mkdir -p /home/node/app/node_modules && chown -R node:node /home/node/app

WORKDIR /home/node/app

COPY package*.json ./

USER node

RUN npm install

COPY --chown=node:node . .

EXPOSE 8080

CMD [ "node", "app.js" ]
